{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u0420\\u043E\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u0456\\u043B\\\\\\u043B\\u0430\\u0431\\u0438\\\\\\u043B\\u0430\\u0431\\u0438 \\u0437 \\u0432\\u0435\\u0431\\u0443\\\\recipe-platform\\\\lab3\\\\src\\\\pages\\\\MyRecipes.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MyRecipes.css';\nimport { getAuth } from \"firebase/auth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MyRecipes() {\n  _s();\n  const [recipes, setRecipes] = useState([]);\n  const [title, setTitle] = useState('');\n  const [time, setTime] = useState('');\n  const [ingredients, setIngredients] = useState('');\n  const [image, setImage] = useState('');\n  const auth = getAuth();\n  const user = auth.currentUser;\n  if (!user) {\n    alert('Спочатку увійдіть у свій акаунт.');\n    return;\n  }\n  fetch('http://localhost:5000/api/recipes', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(newRecipe)\n  });\n  const uid = user.uid;\n  const newRecipe = {\n    title,\n    time,\n    ingredients,\n    image,\n    uid\n  };\n\n  // ✅ 1. ЗАВАНТАЖЕННЯ РЕЦЕПТІВ з сервера\n  useEffect(() => {\n    fetch('http://localhost:5000/api/recipes').then(res => res.json()).then(data => {\n      if (Array.isArray(data)) {\n        setRecipes(data);\n      } else {\n        console.error('⚠ Очікувався масив, отримано:', data);\n        setRecipes([]); // fallback\n      }\n    }).catch(err => {\n      console.error('❌ Помилка при завантаженні рецептів:', err);\n      setRecipes([]); // fallback\n    });\n  }, []);\n\n  // ✅ 2. ДОДАВАННЯ РЕЦЕПТУ через POST\n  const addNewRecipe = () => {\n    if (!title || !time || !ingredients || !image) {\n      alert('Будь ласка, заповніть усі поля.');\n      return;\n    }\n    const newRecipe = {\n      title,\n      time,\n      ingredients,\n      image\n    };\n    fetch('http://localhost:5000/api/recipes', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newRecipe)\n    }).then(res => res.json()).then(() => {\n      setTitle('');\n      setTime('');\n      setIngredients('');\n      setImage('');\n      // 🔄 оновлюємо список після додавання\n      return fetch('http://localhost:5000/api/recipes').then(res => res.json()).then(data => setRecipes(data));\n    }).catch(err => console.error('Помилка при додаванні:', err));\n  };\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\u041C\\u043E\\u0457 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"add-recipe-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \\u043D\\u043E\\u0432\\u0438\\u0439 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430 \\u0440\\u0435\\u0446\\u0435\\u043F\\u0442\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: time,\n        onChange: e => setTime(e.target.value),\n        placeholder: \"\\u0427\\u0430\\u0441 \\u043F\\u0440\\u0438\\u0433\\u043E\\u0442\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: ingredients,\n        onChange: e => setIngredients(e.target.value),\n        placeholder: \"\\u0406\\u043D\\u0433\\u0440\\u0435\\u0434\\u0456\\u0454\\u043D\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: image,\n        onChange: e => setImage(e.target.value),\n        placeholder: \"\\u041F\\u043E\\u0441\\u0438\\u043B\\u0430\\u043D\\u043D\\u044F \\u043D\\u0430 \\u0444\\u043E\\u0442\\u043E (URL)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addNewRecipe,\n        children: \"\\u0414\\u043E\\u0434\\u0430\\u0442\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"recipes-grid\",\n      children: recipes.map((recipe, index) => /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"recipe-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipe.image,\n          alt: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: recipe.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0427\\u0430\\u0441 \\u043F\\u0440\\u0438\\u0433\\u043E\\u0442\\u0443\\u0432\\u0430\\u043D\\u043D\\u044F: \", recipe.time]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"\\u0406\\u043D\\u0433\\u0440\\u0435\\u0434\\u0456\\u0454\\u043D\\u0442\\u0438: \", recipe.ingredients]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(MyRecipes, \"SnTd6CMxqoCFFNF7UmwII2oPRUI=\");\n_c = MyRecipes;\nvar _c;\n$RefreshReg$(_c, \"MyRecipes\");","map":{"version":3,"names":["React","useState","useEffect","getAuth","jsxDEV","_jsxDEV","MyRecipes","_s","recipes","setRecipes","title","setTitle","time","setTime","ingredients","setIngredients","image","setImage","auth","user","currentUser","alert","fetch","method","headers","body","JSON","stringify","newRecipe","uid","then","res","json","data","Array","isArray","console","error","catch","err","addNewRecipe","children","fileName","_jsxFileName","lineNumber","columnNumber","id","type","value","onChange","e","target","placeholder","onClick","className","map","recipe","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/user/OneDrive/Робочий стіл/лаби/лаби з вебу/recipe-platform/lab3/src/pages/MyRecipes.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './MyRecipes.css';\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nexport default function MyRecipes() {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [time, setTime] = useState('');\r\n  const [ingredients, setIngredients] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const auth = getAuth();\r\n  const user = auth.currentUser;\r\n\r\nif (!user) {\r\n  alert('Спочатку увійдіть у свій акаунт.');\r\n  return;\r\n}\r\n\r\nfetch('http://localhost:5000/api/recipes', {\r\n  method: 'POST',\r\n  headers: { 'Content-Type': 'application/json' },\r\n  body: JSON.stringify(newRecipe)\r\n})\r\n\r\nconst uid = user.uid;\r\nconst newRecipe = { title, time, ingredients, image, uid };\r\n\r\n  // ✅ 1. ЗАВАНТАЖЕННЯ РЕЦЕПТІВ з сервера\r\n  useEffect(() => {\r\n  fetch('http://localhost:5000/api/recipes')\r\n    .then(res => res.json())\r\n    .then(data => {\r\n      if (Array.isArray(data)) {\r\n        setRecipes(data);\r\n      } else {\r\n        console.error('⚠ Очікувався масив, отримано:', data);\r\n        setRecipes([]); // fallback\r\n      }\r\n    })\r\n    .catch(err => {\r\n      console.error('❌ Помилка при завантаженні рецептів:', err);\r\n      setRecipes([]); // fallback\r\n    });\r\n}, []);\r\n\r\n  // ✅ 2. ДОДАВАННЯ РЕЦЕПТУ через POST\r\n  const addNewRecipe = () => {\r\n    if (!title || !time || !ingredients || !image) {\r\n      alert('Будь ласка, заповніть усі поля.');\r\n      return;\r\n    }\r\n\r\n    const newRecipe = { title, time, ingredients, image };\r\n\r\n    fetch('http://localhost:5000/api/recipes', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(newRecipe)\r\n    })\r\n      .then(res => res.json())\r\n      .then(() => {\r\n        setTitle('');\r\n        setTime('');\r\n        setIngredients('');\r\n        setImage('');\r\n        // 🔄 оновлюємо список після додавання\r\n        return fetch('http://localhost:5000/api/recipes')\r\n          .then(res => res.json())\r\n          .then(data => setRecipes(data));\r\n      })\r\n      .catch(err => console.error('Помилка при додаванні:', err));\r\n  };\r\n\r\n  return (\r\n    <main>\r\n      <h1>Мої рецепти</h1>\r\n\r\n      <div id=\"add-recipe-form\">\r\n        <h2>Додати новий рецепт</h2>\r\n        <input type=\"text\" value={title} onChange={(e) => setTitle(e.target.value)} placeholder=\"Назва рецепту\" />\r\n        <input type=\"text\" value={time} onChange={(e) => setTime(e.target.value)} placeholder=\"Час приготування\" />\r\n        <textarea value={ingredients} onChange={(e) => setIngredients(e.target.value)} placeholder=\"Інгредієнти\"></textarea>\r\n        <input type=\"text\" value={image} onChange={(e) => setImage(e.target.value)} placeholder=\"Посилання на фото (URL)\" />\r\n        <button onClick={addNewRecipe}>Додати</button>\r\n      </div>\r\n\r\n      <div className=\"recipes-grid\">\r\n        {recipes.map((recipe, index) => (\r\n          <article key={index} className=\"recipe-card\">\r\n            <img src={recipe.image} alt={recipe.title} />\r\n            <h3>{recipe.title}</h3>\r\n            <p>Час приготування: {recipe.time}</p>\r\n            <p>Інгредієнти: {recipe.ingredients}</p>\r\n          </article>\r\n        ))}\r\n      </div>\r\n    </main>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}